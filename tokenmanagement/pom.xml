<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId> com.commerzunternahmen.frame</groupId>
	<artifactId>tokenmanagement</artifactId>
	<version>1.0-SNAPSHOT</version>

	<name>Token Management Rest Service</name>

	<packaging>jar</packaging>

	<properties>
		<version.wildfly>11.0.0.Final</version.wildfly>
		<version.wildfly.server>3.1.0.Final</version.wildfly.server>
		<version.jboss.resteasy>3.0.12.Final</version.jboss.resteasy>

		<version.jboss-logging-annotations>2.1.0.Final</version.jboss-logging-annotations>
		<version.junit>4.12</version.junit>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>8.2.1.Final</version.jboss.bom>
		<module.name>com.commerzunternahmen.tokenmanagement-module</module.name>
		<subsystem.name>com.commerzunternahmen.tokenmanagement-subsystem</subsystem.name>

		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>dd-MM-yyyy_HH-mm-ss</maven.build.timestamp.format>
		<version.war.plugin>3.2.0</version.war.plugin>

		<version.fasterxml.jackson>2.9.4</version.fasterxml.jackson>
		<version.jboss.arquillian>1.3.0.Final</version.jboss.arquillian>
		<version.jboss.weld.junit5>1.2.1.Final</version.jboss.weld.junit5>
		<version.junit5>5.1.0</version.junit5>

	</properties>

	<!-- <scm> <connection>scm:git:https://github.com/wildfly/archetypes.git</connection> 
		<developerConnection>scm:git:https://github.com/wildfly/archetypes.git</developerConnection> 
		<url>https://github.com/wildfly/archetypes/</url> </scm> -->

	<licenses>
		<license>
			<name>LGPL 2.1</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<filters>
			<filter>src/main/resources/config/application.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<enableAssertions>true</enableAssertions>
					<argLine>-Xmx512m</argLine>
					<systemProperties>
						<property>
							<name>jboss.home</name>
							<value>${jboss.home}</value>
						</property>
					</systemProperties>
					<includes>
						<include>**/*TestCase.java</include>
					</includes>
					<forkMode>once</forkMode>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filters>
						<filter>src/assemble/filter.properties</filter>
					</filters>
					<descriptors>
						<descriptor>src/assemble/distribution.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<inherited>false</inherited>
				<version>1.8</version>
				<executions>
					<execution>
						<id>build-dist</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<target>

								<!-- Set up a local properties -->
								<!-- <property name="server.base.path" value="/C:/install/JBossEAP70Runtime" 
									/> -->
								<property name="server.base.path" value="../../../JBossEAP71" />
								<property name="module.folder.name" value="module" />
								<property name="subsystem.folder.name" value="subsystem" />
								<property name="jboss.base.modules.path"
									value="${server.base.path}/modules/system/layers/base" />
								<property name="jboss.standalone.config.path"
									value="${server.base.path}/standalone/configuration" />

								<!-- Replace the '.' in ${module.name} with '/' to get its path -->
								<tempfile property="temp.file" />
								<echo message="${module.name}" file="${temp.file}" />
								<replace file="${temp.file}" token="." value="/" />
								<loadfile srcfile="${temp.file}" property="module.path" />
								<delete file="${temp.file}" />

								<!-- Replace the '.' in ${susystem.name} with '/' to get its path -->
								<tempfile property="temp.file" />
								<echo message="${subsystem.name}" file="${temp.file}" />
								<replace file="${temp.file}" token="." value="/" />
								<loadfile srcfile="${temp.file}" property="subsystem.path" />
								<delete file="${temp.file}" />

								<!-- Prepare All -->
								<delete dir="target/${subsystem.folder.name}" />

								<!-- Prepare Modules -->
								<copy file="src/main/resources/${module.folder.name}/main/module.xml"
									tofile="target/${subsystem.folder.name}/${module.path}/main/module.xml" />
								<copy file="target/${project.artifactId}.${packaging}"
									todir="target/${subsystem.folder.name}/${module.path}/main" />

								<!-- Prepare a Subsystem -->
								<copy
									file="src/main/resources/${subsystem.folder.name}/main/module.xml"
									tofile="target/${subsystem.folder.name}/${subsystem.path}/main/server-war/module.xml" />
								<copy
									todir="target/${subsystem.folder.name}/${subsystem.path}/main/server-war/WEB-INF"
									overwrite="true" force="true">
									<fileset dir="src/main/webapp/WEB-INF" />
								</copy>

								<!-- Delete alter folders -->
								<chmod file="${jboss.base.modules.path}/${module.path}"
									perm="0777" />
								<delete dir="${jboss.base.modules.path}/${module.path}"
									verbose="true" />
								<chmod file="${jboss.base.modules.path}/${subsystem.path}"
									perm="0777" />
								<delete dir="${jboss.base.modules.path}/${subsystem.path}"
									verbose="true" />

								<!-- Copy to a server all from target/ folder -->
								<copy todir="${jboss.base.modules.path}/" overwrite="true"
									force="true">
									<fileset dir="target/${subsystem.folder.name}/" />
								</copy>

								<property name="jboss.standalone.replace.time" value="${maven.build.timestamp}" />
								<move file="${jboss.standalone.config.path}/standalone.xml"
									tofile="${jboss.standalone.config.path}/archive-standalonexml/standalone-${timestamp}.xml" />
								<copy file="src/main/resources/default-config/standalone.xml"
									tofile="${jboss.standalone.config.path}/standalone.xml" force="true" />

								<echo>Module ${module.name} has been created in the
									target/module directory. Copy to your Jboss installation.</echo>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-javaee7-with-tools</artifactId>
				<version>${version.wildfly}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.jboss.arquillian/arquillian-bom -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${version.jboss.arquillian}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>


		<dependency>
			<groupId>org.wildfly.core</groupId>
			<artifactId>wildfly-server</artifactId>
			<version>${version.wildfly.server}</version>
		</dependency>
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-web-common</artifactId>
			<version>${version.wildfly}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.wildfly.core</groupId>
					<artifactId>wildfly-controller</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.wildfly.core</groupId>
			<artifactId>wildfly-subsystem-test</artifactId>
			<type>pom</type>
			<scope>test</scope>
			<version>${version.wildfly.server}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.wildfly.core</groupId>
					<artifactId>wildfly-controller</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging-annotations</artifactId>
			<version>${version.jboss-logging-annotations}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging-processor</artifactId>
			<version>${version.jboss-logging-annotations}</version>
			<scope>provided</scope>
		</dependency>


		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<version>${version.jboss.resteasy}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>3.1.4.Final</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-jaxb-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${version.fasterxml.jackson}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${version.fasterxml.jackson}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${version.fasterxml.jackson}</version>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>8.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jboss.weld.se/weld-se -->
		<!-- <dependency> <groupId>org.jboss.weld.se</groupId> <artifactId>weld-se</artifactId> 
			<version>2.4.6.Final</version> </dependency> -->

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-junit5</artifactId>
			<version>${version.jboss.weld.junit5}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.wildfly.arquillian/wildfly-arquillian-container-managed -->
		<dependency>
			<groupId>org.wildfly.arquillian</groupId>
			<artifactId>wildfly-arquillian-container-managed</artifactId>
			<version>2.1.0.Final</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-weld-embedded</artifactId>
			<version>2.0.0.Beta4</version>
			<scope>test</scope>
		</dependency>

		<dependency>

			<groupId>org.glassfish.extras</groupId>
			<artifactId>glassfish-embedded-all</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-weld -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-weld</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.1.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.enterprise/cdi-api -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>


	</dependencies>
</project>
